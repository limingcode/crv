<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.crv.erais.dao.EraisUsersMapper">

	<!-- 启用redis缓存 -->
	<!-- <cache type="com.km.redis.mybatis.MybatisRedisCache" eviction="LRU"/> -->

	<resultMap id="EraisUsersMap" type="com.crv.erais.model.EraisUsers">
		<result property="id" column="id"/>
		<result property="userId" column="userId"/>
		<result property="userName" column="userName"/>
		<result property="auditBelong" column="auditBelong"/>
		<result property="status" column="status"/>
		<result property="createPro" column="createPro"/>
		<result property="createTime" column="createTime"/>
		<result property="updatePro" column="updatePro"/>
		<result property="updateTime" column="updateTime"/>
		<result property="phone" column="phone"/>
		<result property="jobName" column="jobName"/>
		<result property="jobLevel" column="jobLevel"/>
		<result property="officePhone" column="officePhone"/>
		<result property="empEmail" column="empEmail"/>
		<result property="depName" column="depName"/>

	</resultMap>

	<sql id="columns">
        ID AS id,
        USER_ID AS userId,
        USER_NAME AS userName,
        AUDIT_BELONG AS auditBelong,
        STATUS AS status,
        CREATE_PRO AS createPro,
        CREATE_TIME AS createTime,
        UPDATE_PRO AS updatePro,
        UPDATE_TIME AS updateTime,
        PHONE AS phone,
        JOB_NAME AS jobName,
		OFFICE_PHONE AS officePhone,
		EMP_EMAIL AS empEmail,
		DEP_NAME AS depName,
        JOB_LEVEL AS jobLevel
    </sql>

	<sql id="where">
		<where>
			<if test="id != null and id != ''">
				AND ID = #{id}
			</if>
			<if test="userId != null and userId != ''">
				AND USER_ID = #{userId}
			</if>
			<if test="userName != null and userName != ''">
				AND USER_NAME = #{userName}
			</if>
			<if test="auditBelong != null and auditBelong != ''">
				AND AUDIT_BELONG = #{auditBelong}
			</if>
			<if test="status != null and status != ''">
				AND STATUS = #{status}
			</if>
			<if test="createPro != null and createPro != ''">
				AND CREATE_PRO = #{createPro}
			</if>
			<if test="createTimeBegin !=null">
				AND CREATE_TIME >= #{createTimeBegin}
			</if>
			<if test="createTimeEnd != null">
				<![CDATA[ AND CREATE_TIME <= #{createTimeEnd} ]]>
			</if>
			<if test="updatePro != null and updatePro != ''">
				AND UPDATE_PRO = #{updatePro}
			</if>
			<if test="updateTimeBegin !=null">
				AND UPDATE_TIME >= #{updateTimeBegin}
			</if>
			<if test="updateTimeEnd != null">
				<![CDATA[ AND UPDATE_TIME <= #{updateTimeEnd} ]]>
			</if>
			<if test="phone != null and phone != ''">
				AND PHONE = #{phone}
			</if>
			<if test="jobName != null and jobName != ''">
				AND JOB_NAME = #{jobName}
			</if>
			<if test="jobLevel != null and jobLevel != ''">
				AND JOB_LEVEL = #{jobLevel}
			</if>
			<if test="officePhone != null and officePhone != ''">
				AND OFFICE_PHONE = #{officePhone}
			</if>
			<if test="empEmail != null and empEmail != ''">
				AND EMP_EMAIL = #{empEmail}
			</if>
			<if test="depName != null and depName != ''">
				AND DEP_NAME = #{depName}
			</if>
		</where>
		<if test="orderByExpression != null and orderByExpression != ''">
			${orderByExpression}
		</if>
	</sql>

	<select id="getById" resultType="com.crv.erais.model.EraisUsers">
		SELECT
		<include refid="columns" />
		FROM
		erais_users
		<where>
			ID = #{id}
		</where>
	</select>

	<select id="getByCondition" resultType="com.crv.erais.model.EraisUsers">
		SELECT
		<include refid="columns" />
		FROM
		erais_users
		<include refid="where"/>
	</select>

	<select id="list" resultMap="EraisUsersMap">
		SELECT
		<include refid="columns" />
		FROM
		erais_users
		<include refid="where"/>
	</select>

	<select id="listByIds" resultMap="EraisUsersMap">
		SELECT
		<include refid="columns" />
		FROM
		erais_users
		<where>
			ID IN
			<foreach collection="items" item="item" open="(" separator="," close=")">
				#{item}	        </foreach>
		</where>
	</select>

	<insert id="save" >
		INSERT INTO erais_users
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="userId != null">
				USER_ID,
			</if>
			<if test="userName != null">
				USER_NAME,
			</if>
			<if test="auditBelong != null">
				AUDIT_BELONG,
			</if>
			<if test="status != null">
				STATUS,
			</if>
			<if test="createPro != null">
				CREATE_PRO,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="updatePro != null">
				UPDATE_PRO,
			</if>
			<if test="updateTime != null">
				UPDATE_TIME,
			</if>
			<if test="phone != null">
				PHONE,
			</if>
			<if test="jobName != null">
				JOB_NAME,
			</if>
			<if test="jobLevel != null">
				JOB_LEVEL,
			</if>
			<if test="officePhone != null">
				OFFICE_PHONE,
			</if>
			<if test="empEmail != null">
				EMP_EMAIL,
			</if>
			<if test="depName != null and depName != ''">
				 DEP_NAME,
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="userId != null">
				#{userId},
			</if>
			<if test="userName != null">
				#{userName},
			</if>
			<if test="auditBelong != null">
				#{auditBelong},
			</if>
			<if test="status != null">
				#{status},
			</if>
			<if test="createPro != null">
				#{createPro},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updatePro != null">
				#{updatePro},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			<if test="phone != null">
				#{phone},
			</if>
			<if test="jobName != null">
				#{jobName},
			</if>
			<if test="jobLevel != null">
				#{jobLevel},
			</if>
			<if test="officePhone != null">
				#{officePhone},
			</if>
			<if test="empEmail != null">
				#{empEmail},
			</if>
			<if test="depName != null ">
				 #{depName},
			</if>
		</trim>
	</insert>

	<insert id="saveBatch">
		INSERT INTO erais_users (
		ID,
		USER_ID,
		USER_NAME,
		AUDIT_BELONG,
		STATUS,
		CREATE_PRO,
		CREATE_TIME,
		UPDATE_PRO,
		UPDATE_TIME,
		PHONE,
		JOB_NAME,
		JOB_LEVEL,
		OFFICE_PHONE,
		EMP_EMAIL
		) VALUES
		<foreach collection="items" item="item" separator=",">
			(
			#{item.id},
			#{item.userId},
			#{item.userName},
			#{item.auditBelong},
			#{item.status},
			#{item.createPro},
			#{item.createTime},
			#{item.updatePro},
			#{item.updateTime},
			#{item.phone},
			#{item.jobName},
			#{item.jobLevel},
			#{item.officePhone},
			#{item.empEmail},
			#{depName}
			)
		</foreach>
	</insert>

	<update id="update">
		UPDATE
		erais_users
		<set>
			<if test="userId != null">
				USER_ID = #{userId},
			</if>
			<if test="userName != null">
				USER_NAME = #{userName},
			</if>
			<if test="auditBelong != null">
				AUDIT_BELONG = #{auditBelong},
			</if>
			<if test="status != null">
				STATUS = #{status},
			</if>
			<if test="createPro != null">
				CREATE_PRO = #{createPro},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime},
			</if>
			<if test="updatePro != null">
				UPDATE_PRO = #{updatePro},
			</if>
			<if test="updateTime != null">
				UPDATE_TIME = #{updateTime},
			</if>
			<if test="phone != null">
				PHONE = #{phone},
			</if>
			<if test="jobName != null">
				JOB_NAME = #{jobName},
			</if>

			<if test="officePhone != null ">
				OFFICE_PHONE = #{officePhone},
			</if>
			<if test="empEmail != null ">
				EMP_EMAIL = #{empEmail},
			</if>
			<if test="depName != null ">
				 DEP_NAME = #{depName},
			</if>
			<if test="jobLevel != null">
				JOB_LEVEL = #{jobLevel}
			</if>
		</set>
		<where>
			ID = #{id}
		</where>
		<!--     	UPDATE
                    erais_users
                <set>
                    USER_ID = #{userId},
                    USER_NAME = #{userName},
                    AUDIT_BELONG = #{auditBelong},
                    STATUS = #{status},
                    CREATE_PRO = #{createPro},
                    CREATE_TIME = #{createTime},
                    UPDATE_PRO = #{updatePro},
                    UPDATE_TIME = #{updateTime},
                    PHONE = #{phone},
                    JOB_NAME = #{jobName},
                    JOB_LEVEL = #{jobLevel}
                </set>
                <where>
                    ID = #{id}
                </where> -->
	</update>

	<update id="updateBatch">
		<foreach collection="items" item="item" open="" close="" separator=";">
			UPDATE
			erais_users
			<set>
				USER_ID = #{item.userId},
				USER_NAME = #{item.userName},
				AUDIT_BELONG = #{item.auditBelong},
				STATUS = #{item.status},
				CREATE_PRO = #{item.createPro},
				CREATE_TIME = #{item.createTime},
				UPDATE_PRO = #{item.updatePro},
				UPDATE_TIME = #{item.updateTime},
				PHONE = #{item.phone},
				JOB_NAME = #{item.jobName},
				JOB_LEVEL = #{item.jobLevel},
				OFFICE_PHONE = #{item.officePhone},
				EMP_EMAIL = #{item.empEmail},
				DEP_NAME = #{depName}
			</set>
			<where>
				ID = #{id}
			</where>
		</foreach>
	</update>

	<update id="updateSelective">
		UPDATE
		erais_users
		<set>
			<if test="userId != null">
				USER_ID = #{userId},
			</if>
			<if test="userName != null">
				USER_NAME = #{userName},
			</if>
			<if test="auditBelong != null">
				AUDIT_BELONG = #{auditBelong},
			</if>
			<if test="status != null">
				STATUS = #{status},
			</if>
			<if test="createPro != null">
				CREATE_PRO = #{createPro},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime},
			</if>
			<if test="updatePro != null">
				UPDATE_PRO = #{updatePro},
			</if>
			<if test="updateTime != null">
				UPDATE_TIME = #{updateTime},
			</if>
			<if test="phone != null">
				PHONE = #{phone},
			</if>
			<if test="jobName != null">
				JOB_NAME = #{jobName},
			</if>
			<if test="jobLevel != null">
				JOB_LEVEL = #{jobLevel},
			</if>
			<if test="officePhone != null ">
				OFFICE_PHONE = #{officePhone},
			</if>
			<if test="empEmail != null ">
				EMP_EMAIL = #{empEmail},
			</if>
			<if test="depName != null">
				 DEP_NAME = #{depName}
			</if>
		</set>
		<where>
			ID = #{id}
		</where>
	</update>

	<update id="updateBatchSelective">
		<foreach collection="items" item="item" open="" close="" separator=";">
			UPDATE
			erais_users
			<set>
				<if test="item.userId != null">
					USER_ID = #{item.userId},
				</if>
				<if test="item.userName != null">
					USER_NAME = #{item.userName},
				</if>
				<if test="item.auditBelong != null">
					AUDIT_BELONG = #{item.auditBelong},
				</if>
				<if test="item.status != null">
					STATUS = #{item.status},
				</if>
				<if test="item.createPro != null">
					CREATE_PRO = #{item.createPro},
				</if>
				<if test="item.createTime != null">
					CREATE_TIME = #{item.createTime},
				</if>
				<if test="item.updatePro != null">
					UPDATE_PRO = #{item.updatePro},
				</if>
				<if test="item.updateTime != null">
					UPDATE_TIME = #{item.updateTime},
				</if>
				<if test="item.phone != null">
					PHONE = #{item.phone},
				</if>
				<if test="item.jobName != null">
					JOB_NAME = #{item.jobName},
				</if>
				<if test="item.jobLevel != null">
					JOB_LEVEL = #{item.jobLevel},
				</if>
				<if test="officePhone != null ">
					OFFICE_PHONE = #{officePhone},
				</if>
				<if test="empEmail != null ">
					EMP_EMAIL = #{empEmail},
				</if>
				<if test="depName != null ">
				    DEP_NAME = #{depName}
				</if>
			</set>
			<where>
				ID = #{item.id}
			</where>
		</foreach>
	</update>

	<delete id="delete">
		DELETE FROM
		erais_users
		<where>
			ID = #{id}
		</where>
	</delete>

	<delete id="deleteBatch">
		DELETE FROM
		erais_users
		<where>
			ID IN
			<foreach collection="items" item="item" open="(" separator="," close=")">
				#{item}	        </foreach>
		</where>
	</delete>

	<select id="count" resultType="long">
		SELECT
		COUNT(1)
		FROM
		erais_users
		<include refid="where"/>
	</select>
</mapper>
