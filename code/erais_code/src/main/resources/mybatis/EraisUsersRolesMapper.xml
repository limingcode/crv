<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.crv.erais.dao.EraisUsersRolesMapper">

    <resultMap id="EraisUsersRolesMap" type="com.crv.erais.model.EraisUsersRoles">
        <result property="id" column="id"/>
        <result property="userId" column="userId"/>
        <result property="roleId" column="roleId"/>
    </resultMap>
    
    <sql id="columns">
        ID AS id,
        USER_ID AS userId,
        ROLE_ID AS roleId
    </sql>

    <sql id="where">
    	<where>
   <!--         	<if test="@Ognl@isNotEmpty(id)">
                AND ID = #{id}
           	</if> -->
           	<if test="id != null and id != ''">
                AND ID = #{id}
        	</if>
   <!--         	<if test="@Ognl@isNotEmpty(userId)">
                AND USER_ID = #{userId}
           	</if> -->
           	<if test="userId != null and userId != ''">
                AND USER_ID = #{userId}
        	</if>
   <!--         	<if test="@Ognl@isNotEmpty(roleId)">
                AND ROLE_ID = #{roleId}
           	</if> -->
           	<if test="roleId != null and roleId != ''">
                AND ROLE_ID = #{roleId}
        	</if>
        </where>
        <if test="orderByExpression != null">
${orderByExpression}        </if>
    </sql>
    
    <select id="getById" resultType="com.crv.erais.model.EraisUsersRoles">
        SELECT
            <include refid="columns" />
        FROM
            erais_users_roles
        <where>
            ID = #{id} 
        </where>
    </select>
    
    <select id="getByCondition" resultType="com.crv.erais.model.EraisUsersRoles">
        SELECT
            <include refid="columns" />
        FROM
            erais_users_roles 
        <include refid="where"/>
    </select>
    
    <select id="list" resultMap="EraisUsersRolesMap">
        SELECT
            <include refid="columns" />
        FROM
            erais_users_roles 
        <include refid="where"/>
    </select>
    
    <select id="listByIds" resultMap="EraisUsersRolesMap">
        SELECT
            <include refid="columns" />
        FROM
            erais_users_roles 
        <where>
            ID IN
	        <foreach collection="items" item="item" open="(" separator="," close=")">
#{item}	        </foreach>
        </where>
    </select>
    
    <insert id="save" >
    	INSERT INTO erais_users_roles
    	<trim prefix="(" suffix=")" suffixOverrides=",">
   			<if test="id != null">
            	ID,
            </if>
   			<if test="userId != null">
            	USER_ID,
            </if>
   			<if test="roleId != null">
            	ROLE_ID,
            </if>
    	</trim>
    	VALUES
    	<trim prefix="(" suffix=")" suffixOverrides=",">
    	    <if test="id != null">
        		#{id},
        	</if>
    	    <if test="userId != null">
        		#{userId},
        	</if>
    	    <if test="roleId != null">
        		#{roleId},
        	</if>
    	</trim>
    </insert>
    
    <insert id="saveBatch">
        INSERT INTO erais_users_roles (
            ID,
            USER_ID,
            ROLE_ID
        ) VALUES
        <foreach collection="items" item="item" separator=",">
	        (
	        	#{item.id},
	        	#{item.userId},
	        	#{item.roleId}
	        )
        </foreach>
    </insert>
    
    <update id="update">
	    UPDATE
	        	erais_users_roles
	    	<set>
	        	<if test="userId != null">
	        		USER_ID = #{userId},
	        	</if>
	        	<if test="roleId != null">
	        		ROLE_ID = #{roleId}
	        	</if>
	    	</set>
	    	<where>
	            ID = #{id} 
	    	</where>
<!--     	UPDATE
        	erais_users_roles
    	<set>
        	USER_ID = #{userId},
        	ROLE_ID = #{roleId}
    	</set>
    	<where>
            ID = #{id} 
    	</where> -->
    </update>

	<update id="updateBatch">
		<foreach collection="items" item="item" open="" close="" separator=";">
			UPDATE
				erais_users_roles
			<set>
				USER_ID = #{item.userId},
				ROLE_ID = #{item.roleId}
			</set>
			<where>
				ID = #{id} 
			</where>
		</foreach>
	</update>
    
    <update id="updateSelective">
    	UPDATE
        	erais_users_roles
    	<set>
        	<if test="userId != null">
        		USER_ID = #{userId},
        	</if>
        	<if test="roleId != null">
        		ROLE_ID = #{roleId}
        	</if>
    	</set>
    	<where>
            ID = #{id} 
    	</where>
    </update>
    
    <update id="updateBatchSelective">
    	<foreach collection="items" item="item" open="" close="" separator=";">
    	    UPDATE
	        	erais_users_roles
	    	<set>
	        	<if test="item.userId != null">
	        		USER_ID = #{item.userId},
	        	</if>
	        	<if test="item.roleId != null">
	        		ROLE_ID = #{item.roleId}
	        	</if>
	    	</set>
	    	<where>
	            ID = #{item.id} 
	    	</where>
    	</foreach>
    </update>
    
    <delete id="delete">
        DELETE FROM
            erais_users_roles
        <where>
            ID = #{id} 
       	</where>
    </delete>
    
    <delete id="deleteBatch">
        DELETE FROM
            erais_users_roles
        <where>
            ID IN
	        <foreach collection="items" item="item" open="(" separator="," close=")">
#{item}	        </foreach>
        </where>
    </delete>
    
   	<select id="count" resultType="long">
        SELECT
            COUNT(1)
        FROM
            erais_users_roles
        <include refid="where"/>
    </select>
    
    <update id="clearCache"></update>
</mapper>
